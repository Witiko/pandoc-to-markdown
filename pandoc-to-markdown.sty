\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{pandoc-to-markdown}[2022/10/11 package pandoc-to-markdown]

\RequirePackage{markdown}
\input"pandoc-to-markdown.tex"

% Key-value definitions
\RequirePackage{keyval}

%% Block elements
\ExplSyntaxOn
\renewcommand\pandocRawBlock[2]
  {
    \str_case:nn
      { #1 }
      {
        { tex }   { #2 }
        { latex } { #2 }
      }
  }
\ExplSyntaxOff

%% Inline elements
\RequirePackage[normalem]{ulem}
\renewcommand\pandocUnderline{\uline}
\renewcommand\pandocStrikeout{\sout}
\renewcommand\pandocSubscript{\textsubscript}
\renewcommand\pandocSuperscript{\textsuperscript}
\renewcommand\pandocSmallCaps{\textsc}
\renewcommand\pandocLineBreak{\\}
\ExplSyntaxOn
\renewcommand\pandocRawInline[2]
  {
    \str_case:nn
      { #1 }
      {
        { tex }   { #2 }
        { latex } { #2 }
      }
  }
\ExplSyntaxOff
\renewcommand\pandocNote{\footnote}

\def\pandocFormat{markdown}
\define@key{pandoc-to-markdown}{format}{%
  \def\pandocFormat{#1}%
}

% Directory for auxiliary files
\def\pandocAuxDir{_pandoc_\jobname}

% Document command definitions
\RequirePackage{shellesc}  % Polyfill \write18 in LuaTeX
\newcommand\pandocInput[2][]{%
  \setkeys{pandoc-to-markdown}{#1}%
  \directlua{local kpse = require("kpse")
             kpse.set_program_name("luatex")
             local lfs = require("lfs")
             local auxDir = "\luaescapestring{\pandocAuxDir}"
             if not lfs.isdir(auxDir) then
               assert(lfs.mkdir(auxDir))
             end}
  \immediate\write18{pandoc -f \pandocFormat\space-i "#2" -M auxDir="\pandocAuxDir" -t pandoc-to-markdown.lua -o "\jobname.pandoc.tex"}%
  \input"\jobname.pandoc.tex"%
}
